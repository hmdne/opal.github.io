/* Generated by Opal 1.1.1 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $truthy = Opal.truthy;

  Opal.add_stubs(['$attr_writer', '$warn']);
  return (function($base, $parent_nesting) {
    var self = $module($base, 'Parser');

    var $nesting = [self].concat($parent_nesting);

    (function($base, $parent_nesting) {
      var self = $module($base, 'Deprecation');

      var $nesting = [self].concat($parent_nesting), $Deprecation_warn_of_deprecation$1;

      
      self.$attr_writer("warned_of_deprecation");
      
      Opal.def(self, '$warn_of_deprecation', $Deprecation_warn_of_deprecation$1 = function $$warn_of_deprecation() {
        var self = this, $ret_or_1 = nil, $ret_or_2 = nil;
        if (self.warned_of_deprecation == null) self.warned_of_deprecation = nil;

        return (self.warned_of_deprecation = (function() {if ($truthy(($ret_or_1 = self.warned_of_deprecation))) {
          return $ret_or_1
        } else if ($truthy(($ret_or_2 = self.$warn($$$(self, 'DEPRECATION_WARNING'))))) {
          return $ret_or_2
        } else {
          return true
        }; return nil; })())
      }, $Deprecation_warn_of_deprecation$1.$$arity = 0);
    })($nesting[0], $nesting)
  })($nesting[0], $nesting)
})(Opal);
