/* Generated by Opal 1.1.1 */
(function(Opal) {
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $send = Opal.send;

  Opal.add_stubs(['$attr_reader', '$freeze', '$==', '$size', '$<<', '$-', '$length', '$[]=', '$pop', '$clear', '$last']);
  return (function($base, $parent_nesting) {
    var self = $module($base, 'Parser');

    var $nesting = [self].concat($parent_nesting);

    (function($base, $super, $parent_nesting) {
      var self = $klass($base, $super, 'CurrentArgStack');

      var $nesting = [self].concat($parent_nesting), $CurrentArgStack_initialize$1, $CurrentArgStack_empty$ques$2, $CurrentArgStack_push$3, $CurrentArgStack_set$4, $CurrentArgStack_pop$5, $CurrentArgStack_reset$6, $CurrentArgStack_top$7;

      self.$$prototype.stack = nil;
      
      self.$attr_reader("stack");
      
      Opal.def(self, '$initialize', $CurrentArgStack_initialize$1 = function $$initialize() {
        var self = this;

        
        self.stack = [];
        return self.$freeze();
      }, $CurrentArgStack_initialize$1.$$arity = 0);
      
      Opal.def(self, '$empty?', $CurrentArgStack_empty$ques$2 = function() {
        var self = this;

        return self.stack.$size()['$=='](0)
      }, $CurrentArgStack_empty$ques$2.$$arity = 0);
      
      Opal.def(self, '$push', $CurrentArgStack_push$3 = function $$push(value) {
        var self = this;

        return self.stack['$<<'](value)
      }, $CurrentArgStack_push$3.$$arity = 1);
      
      Opal.def(self, '$set', $CurrentArgStack_set$4 = function $$set(value) {
        var self = this, $writer = nil;

        
        $writer = [$rb_minus(self.stack.$length(), 1), value];
        $send(self.stack, '[]=', Opal.to_a($writer));
        return $writer[$rb_minus($writer["length"], 1)];
      }, $CurrentArgStack_set$4.$$arity = 1);
      
      Opal.def(self, '$pop', $CurrentArgStack_pop$5 = function $$pop() {
        var self = this;

        return self.stack.$pop()
      }, $CurrentArgStack_pop$5.$$arity = 0);
      
      Opal.def(self, '$reset', $CurrentArgStack_reset$6 = function $$reset() {
        var self = this;

        return self.stack.$clear()
      }, $CurrentArgStack_reset$6.$$arity = 0);
      return (Opal.def(self, '$top', $CurrentArgStack_top$7 = function $$top() {
        var self = this;

        return self.stack.$last()
      }, $CurrentArgStack_top$7.$$arity = 0), nil) && 'top';
    })($nesting[0], null, $nesting)
  })($nesting[0], $nesting)
})(Opal);
