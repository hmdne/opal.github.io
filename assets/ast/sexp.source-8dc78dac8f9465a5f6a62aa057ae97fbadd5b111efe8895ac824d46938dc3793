/* Generated by Opal 1.1.1 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module;

  Opal.add_stubs(['$new']);
  return (function($base, $parent_nesting) {
    var self = $module($base, 'AST');

    var $nesting = [self].concat($parent_nesting);

    (function($base, $parent_nesting) {
      var self = $module($base, 'Sexp');

      var $nesting = [self].concat($parent_nesting), $Sexp_s$1;

      
      Opal.def(self, '$s', $Sexp_s$1 = function $$s(type, $a) {
        var $post_args, children, self = this;

        
        
        $post_args = Opal.slice.call(arguments, 1, arguments.length);
        
        children = $post_args;;
        return $$($nesting, 'Node').$new(type, children);
      }, $Sexp_s$1.$$arity = -2)
    })($nesting[0], $nesting)
  })($nesting[0], $nesting)
})(Opal);
