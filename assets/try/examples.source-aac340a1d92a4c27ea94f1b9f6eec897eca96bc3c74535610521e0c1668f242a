/* Generated by Opal 1.1.1 */
(function(Opal) {
  function $rb_minus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs - rhs : lhs['$-'](rhs);
  }
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $hash2 = Opal.hash2, $send = Opal.send, $writer = nil;

  Opal.add_stubs(['$[]=', '$-']);
  
  Opal.const_set($nesting[0], 'TRY_EXAMPLES', $hash2([], {}));
  
  $writer = ["Overview", "" + "def title(s)\n" + "  puts \"~ \#{s} ~\\n\" + '~' * (s.size+4) + \"\\n\\n\"\n" + "  yield\n" + "  puts \"\\n\\n\\n\"\n" + "end\n" + "\n" + "title \"The basics\" do\n" + "  puts say = \"I love Ruby\"\n" + "  puts say.sub('love', \"*love*\").upcase\n" + "  3.times { puts \"\#{say.sub(\"love\", \"❤️\")}!\" }\n" + "end\n" + "\n" + "title \"Interacting with the DOM\" do\n" + "  puts \"The page title is \#{`document`.JS[:title].inspect}.\"\n" + "  puts \"The current URL is \#{`location`.JS[:href].inspect}.\"\n" + "  puts \"The first H1 content is \#{`document`.JS.querySelector('h1').JS[:textContent].inspect}.\"\n" + "end\n" + "\n" + "title \"Classes, objects and procs\" do\n" + "  class User\n" + "    attr_accessor :name\n" + "\n" + "    def initialize(name)\n" + "      @name = name\n" + "    end\n" + "\n" + "    def admin?\n" + "      @name == 'Joe'\n" + "    end\n" + "\n" + "    def method_missing(name, *args, &block)\n" + "      if name.start_with?('can_') && name.end_with?('?')\n" + "        admin? ? true : false\n" + "      end\n" + "    end\n" + "  end\n" + "\n" + "  bob = User.new('Bob')\n" + "  joe = User.new('Joe')\n" + "\n" + "  user_is_admin = -> user do\n" + "    \"\#{user.name} \#{user.admin? ? 'is' : 'is not'} an admin.\"\n" + "  end\n" + "\n" + "  user_can_swim = -> user, action do\n" + "    \"\#{user.name} \#{user.can_swim? ? 'can' : 'cannot'} swim.\"\n" + "  end\n" + "\n" + "  puts user_is_admin.call joe\n" + "  puts user_can_swim.call joe\n" + "  puts user_is_admin.call bob\n" + "  puts user_can_swim.call bob\n" + "end\n"];
  $send($$($nesting, 'TRY_EXAMPLES'), '[]=', Opal.to_a($writer));
  $writer[$rb_minus($writer["length"], 1)];;
  
  $writer = ["Click counter", "" + "require 'native'\n" + "\n" + "element = $$[:document].querySelector('h1')\n" + "title = element[:innerText]\n" + "\n" + "clicks = title.scan(%r{(?: (\\d+))?$}).first.first.to_i\n" + "with_clicks = title.sub(%r{(?: (\\d+))?$}, \" \#{clicks+1}\")\n" + "\n" + "element[:innerText] = with_clicks\n"];
  $send($$($nesting, 'TRY_EXAMPLES'), '[]=', Opal.to_a($writer));
  $writer[$rb_minus($writer["length"], 1)];;
  
  $writer = ["Alert & Prompt", "" + "require 'native'\n" + "name = $$.prompt \"Please enter your name\"\n" + "$$.alert(\"Hello \#{name}!\")\n"];
  $send($$($nesting, 'TRY_EXAMPLES'), '[]=', Opal.to_a($writer));
  return $writer[$rb_minus($writer["length"], 1)];;
})(Opal);
