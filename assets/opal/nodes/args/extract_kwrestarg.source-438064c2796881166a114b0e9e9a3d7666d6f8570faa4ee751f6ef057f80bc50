/* Generated by Opal 1.1.1 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy, $send = Opal.send;

  Opal.add_stubs(['$require', '$handle', '$children', '$name', '$add_temp', '$line', '$used_kwargs', '$map', '$scope', '$join']);
  
  self.$require("opal/nodes/base");
  return (function($base, $parent_nesting) {
    var self = $module($base, 'Opal');

    var $nesting = [self].concat($parent_nesting);

    (function($base, $parent_nesting) {
      var self = $module($base, 'Nodes');

      var $nesting = [self].concat($parent_nesting);

      (function($base, $parent_nesting) {
        var self = $module($base, 'Args');

        var $nesting = [self].concat($parent_nesting);

        (function($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'ExtractKwrestarg');

          var $nesting = [self].concat($parent_nesting), $ExtractKwrestarg_compile$1, $ExtractKwrestarg_used_kwargs$2;

          
          self.$handle("extract_kwrestarg");
          self.$children("name");
          
          Opal.def(self, '$compile', $ExtractKwrestarg_compile$1 = function $$compile() {
            var self = this;

            if ($truthy(self.$name())) {
              
              self.$add_temp(self.$name());
              return self.$line("" + (self.$name()) + " = Opal.kwrestargs($kwargs, " + (self.$used_kwargs()) + ");");
            } else {
              return nil
            }
          }, $ExtractKwrestarg_compile$1.$$arity = 0);
          return (Opal.def(self, '$used_kwargs', $ExtractKwrestarg_used_kwargs$2 = function $$used_kwargs() {
            var $$3, self = this, args = nil;

            
            args = $send(self.$scope().$used_kwargs(), 'map', [], ($$3 = function(arg_name){var self = $$3.$$s == null ? this : $$3.$$s;

            
              
              if (arg_name == null) {
                arg_name = nil;
              };
              return "" + "'" + (arg_name) + "': true";}, $$3.$$s = self, $$3.$$arity = 1, $$3));
            return "" + "{" + (args.$join(",")) + "}";
          }, $ExtractKwrestarg_used_kwargs$2.$$arity = 0), nil) && 'used_kwargs';
        })($nesting[0], $$($nesting, 'Base'), $nesting)
      })($nesting[0], $nesting)
    })($nesting[0], $nesting)
  })($nesting[0], $nesting);
})(Opal);
