/* Generated by Opal 1.1.1 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $klass = Opal.klass, $truthy = Opal.truthy;

  Opal.add_stubs(['$require', '$handle', '$children', '$name', '$add_temp', '$==', '$args_to_keep', '$line', '$!=']);
  
  self.$require("opal/nodes/base");
  return (function($base, $parent_nesting) {
    var self = $module($base, 'Opal');

    var $nesting = [self].concat($parent_nesting);

    (function($base, $parent_nesting) {
      var self = $module($base, 'Nodes');

      var $nesting = [self].concat($parent_nesting);

      (function($base, $parent_nesting) {
        var self = $module($base, 'Args');

        var $nesting = [self].concat($parent_nesting);

        (function($base, $super, $parent_nesting) {
          var self = $klass($base, $super, 'ExtractRestarg');

          var $nesting = [self].concat($parent_nesting), $ExtractRestarg_compile$1;

          
          self.$handle("extract_restarg");
          self.$children("name", "args_to_keep");
          return (Opal.def(self, '$compile', $ExtractRestarg_compile$1 = function $$compile() {
            var self = this;

            if ($truthy(self.$name())) {
              
              self.$add_temp(self.$name());
              if (self.$args_to_keep()['$=='](0)) {
                return self.$line("" + (self.$name()) + " = $post_args;")
              } else {
                return self.$line("" + (self.$name()) + " = $post_args.splice(0, $post_args.length - " + (self.$args_to_keep()) + ");")
              };
            } else if ($truthy(self.$args_to_keep()['$!='](0))) {
              return self.$line("" + "$post_args.splice(0, $post_args.length - " + (self.$args_to_keep()) + ");")
            } else {
              return nil
            }
          }, $ExtractRestarg_compile$1.$$arity = 0), nil) && 'compile';
        })($nesting[0], $$($nesting, 'Base'), $nesting)
      })($nesting[0], $nesting)
    })($nesting[0], $nesting)
  })($nesting[0], $nesting);
})(Opal);
