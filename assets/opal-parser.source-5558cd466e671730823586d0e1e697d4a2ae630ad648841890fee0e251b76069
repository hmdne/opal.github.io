/* Generated by Opal 1.1.1 */
(function(Opal) {
  var self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.$$$, $$ = Opal.$$, $module = Opal.module, $hash2 = Opal.hash2;

  Opal.add_stubs(['$require', '$coerce_to!', '$merge', '$compile', '$eval']);
  
  self.$require("corelib/string/unpack");
  self.$require("opal/compiler");
  self.$require("opal/erb");
  self.$require("opal/version");
  (function($base, $parent_nesting) {
    var self = $module($base, 'Kernel');

    var $nesting = [self].concat($parent_nesting), $Kernel_eval$1, $Kernel_require_remote$2;

    
    
    Opal.def(self, '$eval', $Kernel_eval$1 = function(str) {
      var self = this, default_eval_options = nil, compiling_options = nil, code = nil;

      
      str = $$($nesting, 'Opal')['$coerce_to!'](str, $$($nesting, 'String'), "to_str");
      default_eval_options = $hash2(["file", "eval"], {"file": "(eval)", "eval": true});
      compiling_options = Opal.hash({ arity_check: false }).$merge(default_eval_options);
      code = $$($nesting, 'Opal').$compile(str, compiling_options);
      
      return (function(self) {
        return eval(code);
      })(self)
    ;
    }, $Kernel_eval$1.$$arity = 1);
    
    Opal.def(self, '$require_remote', $Kernel_require_remote$2 = function $$require_remote(url) {
      var self = this;

      
      
      var r = new XMLHttpRequest();
      r.open("GET", url, false);
      r.send('');
    ;
      return self.$eval(r.responseText);
    }, $Kernel_require_remote$2.$$arity = 1);
  })($nesting[0], $nesting);
  
  Opal.compile = function(str, options) {
    if (options) {
      options = Opal.hash(options);
    }
    return Opal.Opal.$compile(str, options);
  };

  Opal['eval'] = function(str, options) {
   return eval(Opal.compile(str, options));
  };

  function run_ruby_scripts() {
    var tag, tags = document.getElementsByTagName('script');

    for (var i = 0, len = tags.length; i < len; i++) {
      tag = tags[i];
      if (tag.type === "text/ruby") {
        if (tag.src)       Opal.Kernel.$require_remote(tag.src);
        if (tag.innerHTML) Opal.Kernel.$eval(tag.innerHTML);
      }
    }
  }

  if (typeof(document) !== 'undefined') {
    if (window.addEventListener) {
      window.addEventListener('DOMContentLoaded', run_ruby_scripts, false);
    }
    else {
      window.attachEvent('onload', run_ruby_scripts);
    }
  }
;
})(Opal);
